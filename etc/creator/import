#!/bin/bash

#!/bin/bash
LXC=/usr/bin/lxc
BASH=/bin/bash
GREP=/bin/grep
CUT=/usr/bin/cut
CB_CONF=/etc/ContainerBox
CBOX=/usr/bin/ContainerBox

CONFIG_DIR="$CB_CONF/creator"

function generate_password {
   PWD=$(< /dev/urandom tr -dc _A-Z-a-z-0-9 | head -c${1:-16};echo;)
   echo $PWD
}

function finish_setup {
    # Passthrough gpu device
    $LXC config device add $1 gpu gpu

    # Create the user and set it as a sudoer
    $LXC exec $1 -- groupadd sudo
    $LXC exec $1 -- useradd -m $2 -G sudo

    # Change password
    $LXC exec $1 -- bash -c "echo -e \"$3\n$3\n\" | passwd $2"

    # Disable autostart by default
    $LXC config set $1 boot.autostart false

}

USER='admin'
PASSWORD=$(generate_password)

NAME=$1
CONF=$2

if [ -z $NAME ]; then
    echo "Provide least the name of the box"
    exit 
fi

if [ ! -f "$CONF" ]; then 
    echo "$CONF: No such file"
fi

XPRA=$($GREP "EnableXpra" $CONF | $CUT -d'=' -f2)
TEMPLATE=$($GREP "Template" $CONF | $CUT -d'=' -f2)
DE=$($GREP "DisplayEnvironment" $CONF | $CUT -d'=' -f2)


if [ "$TEMPLATE" != "vanilla" ] && [ "$DE" != "XFCE" ] && [ "$DE" != "MATE" ] && [ "$DE" != "KDE" ] && [ "$DE" != "GNOME" ] && [ "$DE" != "none" ]; then
    echo "Desktop Environment $DE is not supported (yet?). You can contact me if you want it to be added."
    echo "In the meantime, you can set the Desktop Environment parameter to 'none' and install yours after"
    exit
fi

if [ "$XPRA" = "yes" ]; then
    if [ ! -f "$CONFIG_DIR/templates/xpra_$TEMPLATE" ]; then
        echo "XPRA is not possible for template $TEMPLATE"
        exit 
    fi
fi

echo "Creating Box $NAME"
echo "Using template '$TEMPLATE'"
echo "Installing Desktop Environment '$DE'"
echo "Setting $USER as the first user (and sudoer)"
echo "Password will be set to: $PASSWORD"
echo "Installing experimental Xpra support ? $XPRA"

if [ "$XPRA" = "yes" ]; then
    CB_CONF=$CB_CONF $BASH $CONFIG_DIR/templates/xpra_$TEMPLATE $NAME $DE
else
    CB_CONF=$CB_CONF $BASH $CONFIG_DIR/templates/$TEMPLATE $NAME $DE
fi

test=$($LXC list | $GREP " $NAME ")
if [ "$test" = *"$NAME"* ] ; then
    echo "[ERROR] : Failed to create container $NAME"
    exit
fi
finish_setup $NAME $USER $PASSWORD

IFS=$'\t\n'

$CBOX config network $NAME remove eth0
for NIC in $($GREP "NetworkInterface" $CONF | $CUT -d'=' -f2); do
    #echo $NIC
    IF_NAME=$(echo $NIC | $CUT -d':' -f1)
    TYPE=$(echo $NIC | $CUT -d':' -f2 | $CUT -d' ' -f2 | $CUT -d'>' -f2)
    HOST_IF=$(echo $NIC | $CUT -d':' -f2 | $CUT -d' ' -f4 | $CUT -d'>' -f2)
    ADDR=$(echo $NIC | $CUT -d':' -f2 | $CUT -d' ' -f6 | $CUT -d'>' -f2)

    $CBOX config network $NAME add $IF_NAME $HOST_IF $TYPE $ADDR
done

IFS=$' \t\n'

